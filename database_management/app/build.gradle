/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'pmd'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    jcenter()
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.apache.derby:derby:10.14.1.0'
    testImplementation 'org.assertj:assertj-db:2.0.2'
    testImplementation 'org.jeasy:easy-random-core:5.0.0'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
}

application {
    // Define the main class for the application.
    mainClass = 'org.helmo.sd_projet.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.named('run') {
    standardInput = System.in
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    ruleSets = []
    ruleSetFiles = files("config/pmd/b2-ruleset.xml")
    maxFailures = 10
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}